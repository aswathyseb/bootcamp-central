source("https://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
biocLite()
library("BiocInstaller", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
```{r setup, include=FALSE}
```
biocLite("knitr")
?as.matrix
?random
?nrnorm
?rnorm
rnorm(10)
?as.matrix
?reshape
?t()
?reshape
nsamples=20
pheno = rnorm(nsamples)
pheno
head(pheno)
genes[1:5,1:5]
ngene=1000
genes=matrix(rnorm(nsamp*ngene),ncol=nsamp)
nsamp=20
pheno=rnorm(nsamp)
nsamp=20
pheno=rnorm(nsamp)
ngene=1000
genes=matrix(rnorm(nsamp*ngene),ncol=nsamp)
genes[1:5,1:5]
cors=cor(t(genes),pheno)
hist(cors,nclass=50,xlab="Correlations",main="Correlation between Gene Expression and Phenotype")
.Random.seed
.Random.seed
.Random.seed
.Random.seed
.Random.seed
.Random.seed
.Random.seed
.Random.seed
.Random.seed
rnorm
rnorm(8)
rnorm(8,set.seed(5))
set.seed(5)
rnorm(8
)
rnorm(8)
set.seed(5)
rnorm(8)
set.seed(5)
rnorm(8)
s=set.seed(5)
s=.Random.seed
s
s
s
s
s
s
s
s
x=c(1,2,3,4,5,6,7,8,,9,10)
x=c(1,2,3,4,5,6,7,8,9,10)
mean=5
y=rnomr(20)
mean(y)
y=rnom(20)
y=rnorm(20)
mean(y)
mean(y,mean=mean)
mean(y,mean=0)
y=rnorm(20,mean)
mean(y)
y=rnorm(20)
mean(y)
fn1=function(x,y){ }
fn1=function(x,y){
Z=x+y
}
fn1(5,3)
Z=x+y
mean
fn1(5,6)
fn1
cors=cor(t(genes),pheno)
cor.test(x[1,],y)
x
simR2=function(nsamp=20,ngene=1000,nsel=10){
if (nsel >= nsamp-1) stop("The number of genes selected must
be less than the sample size")
pheno=rnorm(nsamp)
genes=matrix(rnorm(nsamp*ngene),ncol=nsamp)
cors=cor(t(genes),pheno)
selgenes=order(cors,decreasing=TRUE)[1:nsel]
sigGenes=genes[selgenes,]
R2=var(fitted(lm(pheno~t(sigGenes))))/var(pheno)
c(maxAbsR=max(abs(cors)),minR=min(cors),maxR=max(cors),Rsq=R2)
}
simN20G1000S10=matrix(nrow=1000,ncol=4)
simN20G1000S10=matrix(nrow=1000,ncol=4)
simN20G1000S10=matrix(nrow=1000,ncol=4)
for (i in 1:1000) simN20G1000S10[i,]=simR2(nsamp=20,ngene=1000,nsel=10)
simN20G1000S10[1:5,1:5]
simN20G1000S10[1:5]
simN20G1000S10[1:10]
simN20G1000S10[1]
sessionInfo()
